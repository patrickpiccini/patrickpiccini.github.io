<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Patrick Piccini</title>
    <link>https://patrickpiccini.github.io/</link>
    <description>Recent content on Patrick Piccini</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 09 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://patrickpiccini.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code - Email com Google Authentication</title>
      <link>https://patrickpiccini.github.io/codes/nothing-yet/</link>
      <pubDate>Tue, 12 Apr 2022 21:00:50 -0300</pubDate>
      
      <guid>https://patrickpiccini.github.io/codes/nothing-yet/</guid>
      <description>Voce pode clonar o repositório: email-google-auth. GoogleAuthenticator.py import os.path from google.auth.transport.requests import Request from google.oauth2.credentials import Credentials from google_auth_oauthlib.flow import InstalledAppFlow from googleapiclient.discovery import build from googleapiclient.errors import HttpError def authenticator(client_secret_file, api_service_name, api_version, *scopes): CLIENT_SECRET_FILE = client_secret_file API_SERVICE_NAME = api_service_name API_VERSION = api_version SCOPES = [scope for scope in scopes[0]] creds = None if os.path.exists(&amp;#39;token.json&amp;#39;): creds = Credentials.from_authorized_user_file( &amp;#39;token.json&amp;#39;, SCOPES) if not creds or not creds.valid: if creds and creds.expired and creds.</description>
    </item>
    
    <item>
      <title>Email com Google Authentication</title>
      <link>https://patrickpiccini.github.io/posts/google-auth/</link>
      <pubDate>Tue, 12 Apr 2022 21:00:50 -0300</pubDate>
      
      <guid>https://patrickpiccini.github.io/posts/google-auth/</guid>
      <description>Table of Contents  Introdução  Pré-Requisitos Arquitetura   Step 1 – Criar credenciais Step 2 – Instalação de bibliotecas Step 3 – Criação de código de autenticação Step 4 – Criação do código de envio de e-mail Step 5 – Execução Código Completo Conclusão Referências   Introdução Nesse artigo irei abordar uma situação que recentemente a Google publicou referente ao login a conta Google, utilizando somente o usuário e senha para se conectar em apps de terceiros.</description>
    </item>
    
    <item>
      <title>Developing...</title>
      <link>https://patrickpiccini.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://patrickpiccini.github.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>